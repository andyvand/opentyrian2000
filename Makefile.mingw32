# BUILD SETTINGS ###############################################################

PLATFORM := WIN32
TYRIAN_DIR = C:\\TYRIAN

WITH_NETWORK := true
WITH_MIDI := true

################################################################################
# see https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html
################################################################################

SHELL = /bin/sh

HOSTCC = /usr/bin/clang
CC = /usr/local/bin/x86_64-w64-mingw32-gcc -m32
RC = /usr/local/bin/x86_64-w64-mingw32-windres -Fpe-i386

INSTALL = /usr/bin/install
PKG_CONFIG = /usr/local/bin/pkg-config
PKG_CONFIG_PATH=/usr/local/x86_64-w64-mingw32/lib/pkg-config

# VCS_IDREV ?= (git describe --tags || git rev-parse --short HEAD)
VCS_IDREV = "\"$(shell echo "$(shell ./getver)")\""

INSTALL_PROGRAM = $(INSTALL) -m 755
INSTALL_DATA = $(INSTALL) -m 644

prefix ?= /usr/local/x86_64-w64-mingw32
exec_prefix ?= $(prefix)

bindir ?= $(exec_prefix)/bin
datarootdir ?= $(prefix)/share
datadir ?= $(datarootdir)
docdir ?= $(datarootdir)/doc/opentyrian2000
mandir ?= $(datarootdir)/man
man6dir ?= $(mandir)/man6
man6ext ?= .6
desktopdir ?= $(datarootdir)/applications
icondir ?= $(datarootdir)/icons

# see https://www.pathname.com/fhs/pub/fhs-2.3.html

gamesdir ?= $(datadir)/games

###

TARGET := opentyrian2000

SRCS := $(wildcard src/*.c)
OBJS := $(SRCS:src/%.c=obj/%.o) obj/opentyrian2000.o
DEPS := $(SRCS:src/%.c=obj/%.d)

###

ifeq ($(WITH_NETWORK), true)
    EXTRA_CPPFLAGS += -DWITH_NETWORK
endif

ifeq ($(WITH_MIDI), true)
    EXTRA_CPPFLAGS += -DWITH_MIDI
endif

ifeq ($(OS), linux)
    EXTRA_CPPFLAGS += -DNO_NATIVE_MIDI
endif

OPENTYRIAN_VERSION := $(VCS_IDREV)\

EXTRA_CPPFLAGS += -DOPENTYRIAN_VERSION=$(OPENTYRIAN_VERSION)

CPPFLAGS = -MMD -DNDEBUG=1
CFLAGS = -g0 -O3 $(EXTRA_CPPFLAGS) -pedantic -Wall -Wextra
LDFLAGS ?=
LDLIBS ?= -L/usr/local/x86_64-w64-mingw32/lib32 -lws2_32 -liphlpapi -lmingw32 -lSDL2main -lSDL2 -mwindows  -Wl,--dynamicbase -Wl,--nxcompat -lm -ldinput8 -ldxguid -ldxerr8 -luser32 -lgdi32 -lwinmm -limm32 -lole32 -loleaut32 -lshell32 -lsetupapi -lversion -luuid

ifeq ($(WITH_NETWORK), true)
    SDL_CPPFLAGS := -I/usr/local/x86_64-w64-mingw32/include
    SDL_LDFLAGS :=
    SDL_LDLIBS := -L/usr/local/x86_64-w64-mingw32/lib32 -lSDL2 -lSDL2_net
else
    SDL_CPPFLAGS := -I/usr/local/x86_64-w64-mingw32/include
    SDL_LDFLAGS :=
    SDL_LDLIBS := -L/usr/local/x86_64-w64-mingw32/lib32 -lSDL2
endif

ifeq ($(WITH_MIDI), true)
    SDL_PACKAGES := SDL2_mixer_ext
    MIDIPROC_LIBS := midiproc fluidsynth
endif

ifeq ($(WITH_MIDI), true)
    SDL_CPPFLAGS += -I/usr/local/x86_64-w64-mingw32/include -I/usr/local/x86_64-w64-mingw32/include/SDL2 -I/usr/local/x86_64-w64-mingw32/include/midiproc
    SDL_LDFLAGS :=
    SDL_LDLIBS += -L/usr/local/x86_64-w64-mingw32/lib32 -lmidiproc -lSDL2_mixer_ext -lfluidsynth 
endif

# add stdc++ to the ldlibs if using midiproc
ifneq ($(MIDIPROC_LIBS), )
    SDL_LDLIBS += /usr/local/x86_64-w64-mingw32/lib32/libstdc++.dll.a -lsupc++ -lgcc_s
endif

ALL_CPPFLAGS = -DTARGET_$(PLATFORM) \
               -DTYRIAN_DIR='"$(TYRIAN_DIR)"' \
               $(EXTRA_CPPFLAGS) \
               $(SDL_CPPFLAGS) \
               $(CPPFLAGS)
ALL_CFLAGS = $(CFLAGS)
ALL_LDFLAGS = $(SDL_LDFLAGS) \
              $(LDFLAGS)
ALL_LDLIBS = -lm \
             $(SDL_LDLIBS) \
             $(LDLIBS)

###

.PHONY : all
all : getver $(TARGET).exe

.PHONY : installdirs
installdirs :
	mkdir -p $(DESTDIR)$(bindir)
	mkdir -p $(DESTDIR)$(man6dir)

.PHONY : install
install : $(TARGET).exe installdirs
	$(INSTALL_PROGRAM) $(TARGET).exe $(DESTDIR)$(bindir)/
	$(INSTALL_DATA) linux/man/opentyrian2000.6 $(DESTDIR)$(man6dir)/opentyrian2000$(man6ext)

.PHONY : uninstall
uninstall :
	rm -f $(DESTDIR)$(bindir)/$(TARGET).exe
	rm -f $(DESTDIR)$(man6dir)/opentyrian2000$(man6ext)

.PHONY : clean
clean :
	rm -f $(OBJS)
	rm -f $(DEPS)
	rm -f $(TARGET).exe
	rm -f getver obj/opentyrian2000.o

$(TARGET).exe : $(OBJS)
	$(CC) $(ALL_CFLAGS) $(ALL_LDFLAGS) -o $@ $^ $(ALL_LDLIBS)

-include $(DEPS)

getver: getver.c
	$(HOSTCC) -o $@ $<

obj/%.o : src/%.c
	@mkdir -p "$(dir $@)"
	$(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) -c -o $@ $<

obj/%.o: src/%.rc
	$(RC) -I/usr/local/x86_64-w64-mingw32/includes -i $< -o $@
